name: deploy [DOCKER-COMPOSE]
description: copy by ssh sources to remote and runs compose docker command

inputs:
  ssh_private_key:
    required: true
    description: ''
  ssh_private_host:
    required: true
    description: ''
  ssh_private_port:
    required: true
    description: ''
  ssh_private_user:
    required: true
    description: ''

  domain_name:
    required: true
    description: 'domain name for project ${DOMAIN_NAME}.wlg.tv'
  target_service:
    required: false
    description: 'service name of docker-compose.yml for proxy'
  target_port:
    required: false
    description: 'service port of docker-compose.yml for proxy'

runs:
  using: composite
  steps:
    - id: ssh
      name: create ssh configuration
      shell: bash
      env:
        SSH_RSA_ID: ~/.ssh/id_rsa
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh_private_key }}" > ${{ env.SSH_RSA_ID }}
        chmod 600 ${{ env.SSH_RSA_ID }}
        cat <<EOF >> ~/.ssh/config
        Host sshserver
            HostName ${{ inputs.ssh_private_host }}
            User ${{ inputs.ssh_private_user }}
            Port ${{ inputs.ssh_private_port }}
            IdentityFile ${{ env.SSH_RSA_ID }}
        EOF
        ssh-keyscan -H ${{ inputs.ssh_private_host }} >> ~/.ssh/known_hosts

#    - id: copy
#      name: copy files fia ssh
#      shell: bash
#      run: |
#        ssh -o StrictHostKeyChecking=no sshserver "mkdir -p /data/compose/cover/"
#        scp -o StrictHostKeyChecking=no -r ./ sshserver:/data/compose/cover/

    - id: copy
      name: copy files fia ssh
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -l ${{ inputs.ssh_private_user }} -p ${{ inputs.ssh_private_port }} ${{ inputs.ssh_private_host }} "mkdir -p /data/compose/cover/"
        rsync -avz --exclude './src' -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ inputs.ssh_private_port }}" ./ ${{ inputs.ssh_private_user }}@${{ inputs.ssh_private_host }}:/data/compose/cover/

# -> create network
# -> copy sources by ssh
# -> generate docker-compose.override.yml
# -> execute docker compose up -d